@PACKAGE_INIT@

message(DEPRECATION "Since 2.4, use package name KDevelopPGQt and imported targets instead.")

include(CMakeFindDependencyMacro)
find_dependency(KDevelopPGQt "@kdevelop-pg-qt_VERSION@")

# BACKWARD COMPATIBILITY

# KDEVPGQT_INCLUDE_DIR         - include dir of kdevelop-pg, for example /usr/include/kdevelop-pg
# KDEVPGQT_EXECUTABLE          - the absolute path to the kdevelop-pg executable
get_target_property(KDEVPGQT_INCLUDE_DIR KDevelopPGQt::Utils INTERFACE_INCLUDE_DIRECTORIES)
get_target_property(KDEVPGQT_EXECUTABLE KDevelopPGQt::kdev-pg-qt LOCATION)
set(KDEVPGQT_INCLUDE_DIR ${KDEVPGQT_INCLUDE_DIR} CACHE PATH "kdevelop-pg-qt include directory containing the headers")
set(KDEVPGQT_EXECUTABLE ${KDEVPGQT_EXECUTABLE} CACHE PATH "executable for kdevelop-pg-qt")

# warn about outdated variables
function(KDEVPGQT_deprecate_KDEVPGQT_INCLUDE_DIR varname access_type)
    if(access_type STREQUAL "READ_ACCESS")
        message(DEPRECATION "The variable KDEVPGQT_INCLUDE_DIR will be gone in future KDevelop-PG-Qt versions.\nSince 2.4, use the imported library target KDevelopPGQt::Utils instead.")
    endif()
endfunction()

function(KDEVPGQT_deprecate_KDEVPGQT_EXECUTABLE varname access_type)
    if(access_type STREQUAL "READ_ACCESS")
        message(DEPRECATION "The variable KDEVPGQT_EXECUTABLE will be gone in future KDevelop-PG-Qt versions.\nSince 2.4, use the imported executable target KDevelopPGQt::kdev-pg-qt instead.")
    endif()
endfunction()

variable_watch(KDEVPGQT_INCLUDE_DIR KDEVPGQT_deprecate_KDEVPGQT_INCLUDE_DIR)
variable_watch(KDEVPGQT_EXECUTABLE KDEVPGQT_deprecate_KDEVPGQT_EXECUTABLE)

macro(KDEVPGQT_GENERATE _srcOrTargetVar _language)
    message(DEPRECATION "The macro KDEVPGQT_GENERATE will be gone in future KDevelop-PG-Qt versions. Use the new name KDEVELOPPGQT_GENERATE instead.")
    kdeveloppgqt_generate(${_srcOrTargetVar} ${_language} ${ARGN})
endmacro()
